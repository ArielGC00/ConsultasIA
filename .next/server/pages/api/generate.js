"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate";
exports.ids = ["pages/api/generate"];
exports.modules = {

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "(api)/./pages/api/generate.js":
/*!*******************************!*\
  !*** ./pages/api/generate.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\n/* harmony default export */ async function __WEBPACK_DEFAULT_EXPORT__(req, res) {\n    if (!configuration.apiKey) {\n        res.status(500).json({\n            error: {\n                message: \"OpenAI API key not configured, please follow instructions in README.md\"\n            }\n        });\n        return;\n    }\n    const diagnostico = req.body.diagnostico || \"\";\n    if (diagnostico.trim().length === 0) {\n        res.status(400).json({\n            error: {\n                message: \"Please enter a valid diagnostico\"\n            }\n        });\n        return;\n    }\n    try {\n        const completion = await openai.createCompletion({\n            model: \"text-davinci-003\",\n            prompt: generatePrompt(diagnostico),\n            temperature: 0.73\n        });\n        res.status(200).json({\n            result: completion.data.choices[0].text\n        });\n    } catch (error) {\n        if (error.response) {\n            console.error(error.response.status, error.response.data);\n            res.status(error.response.status).json(error.response.data);\n        } else {\n            console.error(`Error with OpenAI API request: ${error.message}`);\n            res.status(500).json({\n                error: {\n                    message: \"An error occurred during your request.\"\n                }\n            });\n        }\n    }\n}\n// La función generatePrompt crea una cadena de texto con diferentes posibles enfermedades y sus síntomas, y el diagnóstico ingresado por el usuario. \n// La cadena de texto se utiliza como prompt para generar la respuesta de OpenAI.\nfunction generatePrompt(diagnostico) {\n    return `Indica una posible enfermedad con los sintomas indicados por el usuario.\r\n\r\n  Posible enfermedad: Gripe\r\n  Síntomas: Fiebre, escalofríos, dolores musculares, fatiga, dolor de cabeza, congestión nasal y dolor de garganta. \r\n  Posible enfermedad: Resfriado común\r\n  Síntomas: Congestión nasal, secreción nasal, estornudos, dolor de garganta, tos y malestar general. \r\n  Posible enfermedad: Alergia\r\n  Síntomas: Congestión nasal, secreción nasal, estornudos, picazón en los ojos y la nariz, ojos llorosos, tos y dificultad para respirar.\r\n  Posible enfermedad: Infección del tracto urinario\r\n  Síntomas: Dolor o ardor al orinar, necesidad frecuente y urgente de orinar, orina turbia o con sangre, dolor en la parte baja del abdomen o en la espalda.\r\ndiagnostico: ${diagnostico} que el diagnostico sea menos de 10 palabras y solamente el nombre de la enfermedad\r\nnombre enfermedad:`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2VuZXJhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBRWxELE1BQU1FLGdCQUFnQixJQUFJRixpREFBYUEsQ0FBQztJQUN0Q0csUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBQ0EsTUFBTUMsU0FBUyxJQUFJTiw2Q0FBU0EsQ0FBQ0M7QUFFN0IsNkJBQWUsMENBQWdCTSxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUN2QyxJQUFJLENBQUNQLGNBQWNDLE1BQU0sRUFBRTtRQUN6Qk0sSUFBSUMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsT0FBTztnQkFDTEMsU0FBUztZQUNYO1FBQ0Y7UUFDQTtJQUNGLENBQUM7SUFFRCxNQUFNQyxjQUFjTixJQUFJTyxJQUFJLENBQUNELFdBQVcsSUFBSTtJQUM1QyxJQUFJQSxZQUFZRSxJQUFJLEdBQUdDLE1BQU0sS0FBSyxHQUFHO1FBQ25DUixJQUFJQyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxPQUFPO2dCQUNMQyxTQUFTO1lBQ1g7UUFDRjtRQUNBO0lBQ0YsQ0FBQztJQUVELElBQUk7UUFDRixNQUFNSyxhQUFhLE1BQU1YLE9BQU9ZLGdCQUFnQixDQUFDO1lBQy9DQyxPQUFPO1lBQ1BDLFFBQVFDLGVBQWVSO1lBQ3ZCUyxhQUFhO1FBQ2Y7UUFDQWQsSUFBSUMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFYSxRQUFRTixXQUFXTyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUNDLElBQUk7UUFBQztJQUNqRSxFQUFFLE9BQU1mLE9BQU87UUFDYixJQUFJQSxNQUFNZ0IsUUFBUSxFQUFFO1lBQ2xCQyxRQUFRakIsS0FBSyxDQUFDQSxNQUFNZ0IsUUFBUSxDQUFDbEIsTUFBTSxFQUFFRSxNQUFNZ0IsUUFBUSxDQUFDSCxJQUFJO1lBQ3hEaEIsSUFBSUMsTUFBTSxDQUFDRSxNQUFNZ0IsUUFBUSxDQUFDbEIsTUFBTSxFQUFFQyxJQUFJLENBQUNDLE1BQU1nQixRQUFRLENBQUNILElBQUk7UUFDNUQsT0FBTztZQUNMSSxRQUFRakIsS0FBSyxDQUFDLENBQUMsK0JBQStCLEVBQUVBLE1BQU1DLE9BQU8sQ0FBQyxDQUFDO1lBQy9ESixJQUFJQyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUNuQkMsT0FBTztvQkFDTEMsU0FBUztnQkFDWDtZQUNGO1FBQ0YsQ0FBQztJQUNIO0FBQ0YsQ0FBQztBQUNELHNKQUFzSjtBQUN0SixpRkFBaUY7QUFDakYsU0FBU1MsZUFBZVIsV0FBVyxFQUFFO0lBQ25DLE9BQU8sQ0FBQztBQVlWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpLXF1aWNrc3RhcnQtbm9kZS8uL3BhZ2VzL2FwaS9nZW5lcmF0ZS5qcz82MjdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZ3VyYXRpb24sIE9wZW5BSUFwaSB9IGZyb20gXCJvcGVuYWlcIjtcclxuXHJcbmNvbnN0IGNvbmZpZ3VyYXRpb24gPSBuZXcgQ29uZmlndXJhdGlvbih7XHJcbiAgYXBpS2V5OiBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSxcclxufSk7XHJcbmNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUlBcGkoY29uZmlndXJhdGlvbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICBpZiAoIWNvbmZpZ3VyYXRpb24uYXBpS2V5KSB7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgIGVycm9yOiB7XHJcbiAgICAgICAgbWVzc2FnZTogXCJPcGVuQUkgQVBJIGtleSBub3QgY29uZmlndXJlZCwgcGxlYXNlIGZvbGxvdyBpbnN0cnVjdGlvbnMgaW4gUkVBRE1FLm1kXCIsXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZGlhZ25vc3RpY28gPSByZXEuYm9keS5kaWFnbm9zdGljbyB8fCAnJztcclxuICBpZiAoZGlhZ25vc3RpY28udHJpbSgpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICBlcnJvcjoge1xyXG4gICAgICAgIG1lc3NhZ2U6IFwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZGlhZ25vc3RpY29cIixcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgY29tcGxldGlvbiA9IGF3YWl0IG9wZW5haS5jcmVhdGVDb21wbGV0aW9uKHtcclxuICAgICAgbW9kZWw6IFwidGV4dC1kYXZpbmNpLTAwM1wiLFxyXG4gICAgICBwcm9tcHQ6IGdlbmVyYXRlUHJvbXB0KGRpYWdub3N0aWNvKSxcclxuICAgICAgdGVtcGVyYXR1cmU6IDAuNzMsXHJcbiAgICB9KTtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgcmVzdWx0OiBjb21wbGV0aW9uLmRhdGEuY2hvaWNlc1swXS50ZXh0IH0pO1xyXG4gIH0gY2F0Y2goZXJyb3IpIHtcclxuICAgIGlmIChlcnJvci5yZXNwb25zZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yLnJlc3BvbnNlLnN0YXR1cywgZXJyb3IucmVzcG9uc2UuZGF0YSk7XHJcbiAgICAgIHJlcy5zdGF0dXMoZXJyb3IucmVzcG9uc2Uuc3RhdHVzKS5qc29uKGVycm9yLnJlc3BvbnNlLmRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3Igd2l0aCBPcGVuQUkgQVBJIHJlcXVlc3Q6ICR7ZXJyb3IubWVzc2FnZX1gKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIGVycm9yOiB7XHJcbiAgICAgICAgICBtZXNzYWdlOiAnQW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHlvdXIgcmVxdWVzdC4nLFxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi8vIExhIGZ1bmNpw7NuIGdlbmVyYXRlUHJvbXB0IGNyZWEgdW5hIGNhZGVuYSBkZSB0ZXh0byBjb24gZGlmZXJlbnRlcyBwb3NpYmxlcyBlbmZlcm1lZGFkZXMgeSBzdXMgc8OtbnRvbWFzLCB5IGVsIGRpYWduw7NzdGljbyBpbmdyZXNhZG8gcG9yIGVsIHVzdWFyaW8uIFxyXG4vLyBMYSBjYWRlbmEgZGUgdGV4dG8gc2UgdXRpbGl6YSBjb21vIHByb21wdCBwYXJhIGdlbmVyYXIgbGEgcmVzcHVlc3RhIGRlIE9wZW5BSS5cclxuZnVuY3Rpb24gZ2VuZXJhdGVQcm9tcHQoZGlhZ25vc3RpY28pIHtcclxuICByZXR1cm4gYEluZGljYSB1bmEgcG9zaWJsZSBlbmZlcm1lZGFkIGNvbiBsb3Mgc2ludG9tYXMgaW5kaWNhZG9zIHBvciBlbCB1c3VhcmlvLlxyXG5cclxuICBQb3NpYmxlIGVuZmVybWVkYWQ6IEdyaXBlXHJcbiAgU8OtbnRvbWFzOiBGaWVicmUsIGVzY2Fsb2Zyw61vcywgZG9sb3JlcyBtdXNjdWxhcmVzLCBmYXRpZ2EsIGRvbG9yIGRlIGNhYmV6YSwgY29uZ2VzdGnDs24gbmFzYWwgeSBkb2xvciBkZSBnYXJnYW50YS4gXHJcbiAgUG9zaWJsZSBlbmZlcm1lZGFkOiBSZXNmcmlhZG8gY29tw7puXHJcbiAgU8OtbnRvbWFzOiBDb25nZXN0acOzbiBuYXNhbCwgc2VjcmVjacOzbiBuYXNhbCwgZXN0b3JudWRvcywgZG9sb3IgZGUgZ2FyZ2FudGEsIHRvcyB5IG1hbGVzdGFyIGdlbmVyYWwuIFxyXG4gIFBvc2libGUgZW5mZXJtZWRhZDogQWxlcmdpYVxyXG4gIFPDrW50b21hczogQ29uZ2VzdGnDs24gbmFzYWwsIHNlY3JlY2nDs24gbmFzYWwsIGVzdG9ybnVkb3MsIHBpY2F6w7NuIGVuIGxvcyBvam9zIHkgbGEgbmFyaXosIG9qb3MgbGxvcm9zb3MsIHRvcyB5IGRpZmljdWx0YWQgcGFyYSByZXNwaXJhci5cclxuICBQb3NpYmxlIGVuZmVybWVkYWQ6IEluZmVjY2nDs24gZGVsIHRyYWN0byB1cmluYXJpb1xyXG4gIFPDrW50b21hczogRG9sb3IgbyBhcmRvciBhbCBvcmluYXIsIG5lY2VzaWRhZCBmcmVjdWVudGUgeSB1cmdlbnRlIGRlIG9yaW5hciwgb3JpbmEgdHVyYmlhIG8gY29uIHNhbmdyZSwgZG9sb3IgZW4gbGEgcGFydGUgYmFqYSBkZWwgYWJkb21lbiBvIGVuIGxhIGVzcGFsZGEuXHJcbmRpYWdub3N0aWNvOiAke2RpYWdub3N0aWNvfSBxdWUgZWwgZGlhZ25vc3RpY28gc2VhIG1lbm9zIGRlIDEwIHBhbGFicmFzIHkgc29sYW1lbnRlIGVsIG5vbWJyZSBkZSBsYSBlbmZlcm1lZGFkXHJcbm5vbWJyZSBlbmZlcm1lZGFkOmA7XHJcbn1cclxuIl0sIm5hbWVzIjpbIkNvbmZpZ3VyYXRpb24iLCJPcGVuQUlBcGkiLCJjb25maWd1cmF0aW9uIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwib3BlbmFpIiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsImRpYWdub3N0aWNvIiwiYm9keSIsInRyaW0iLCJsZW5ndGgiLCJjb21wbGV0aW9uIiwiY3JlYXRlQ29tcGxldGlvbiIsIm1vZGVsIiwicHJvbXB0IiwiZ2VuZXJhdGVQcm9tcHQiLCJ0ZW1wZXJhdHVyZSIsInJlc3VsdCIsImRhdGEiLCJjaG9pY2VzIiwidGV4dCIsInJlc3BvbnNlIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/generate.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/generate.js"));
module.exports = __webpack_exports__;

})();